# -*- coding: utf-8 -*-
"""EDA Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1606MkiBOutZ5zAI9p1GlbzdIZxZx_Hp5
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Load dataset
file_path = r"/content/Sales_April_2019.csv"   # <-- make sure the file is in your working directory
df = pd.read_csv(file_path)

df.dropna(inplace=True)
# Remove rows where headers got mixed into data
df = df[df['Quantity Ordered'] != 'Quantity Ordered']
# Convert datatypes
df['Quantity Ordered'] = pd.to_numeric(df['Quantity Ordered'], errors='coerce')
df['Price Each'] = pd.to_numeric(df['Price Each'], errors='coerce')
df['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')
# Drop NaNs caused by conversion
df.dropna(inplace=True)
# Step 3: Feature Engineering
df['Sales'] = df['Quantity Ordered'] * df['Price Each']
df['Month'] = df['Order Date'].dt.month
df['Hour'] = df['Order Date'].dt.hour
df['City'] = df['Purchase Address'].apply(lambda x: x.split(",")[1].strip() if "," in x else np.nan)

sales_by_month = df.groupby('Month')['Sales'].sum()
plt.figure(figsize=(8,5))
sns.barplot(x=sales_by_month.index, y=sales_by_month.values)
plt.title("Total Sales by Month")
plt.xlabel("Month")
plt.ylabel("Sales (USD)")
plt.show()

## 2. Sales by City
sales_by_city = df.groupby('City')['Sales'].sum().sort_values(ascending=False)
plt.figure(figsize=(10,6))
sns.barplot(x=sales_by_city.index, y=sales_by_city.values)
plt.title("Total Sales by City")
plt.xlabel("City")
plt.ylabel("Sales (USD)")
plt.xticks(rotation=45)
plt.show()

## 3. Orders by Hour (Best time for ads)
orders_by_hour = df.groupby('Hour')['Order ID'].count()
plt.figure(figsize=(10,6))
sns.lineplot(x=orders_by_hour.index, y=orders_by_hour.values, marker="o")
plt.title("Number of Orders by Hour")
plt.xlabel("Hour of Day")
plt.ylabel("Number of Orders")
plt.grid()
plt.show()

## 4. Top Selling Products
top_products = df.groupby('Product')['Quantity Ordered'].sum().sort_values(ascending=False)
plt.figure(figsize=(12,6))
sns.barplot(x=top_products.index, y=top_products.values, palette= ["r","b","g","p","y"])
plt.title("Top Selling Products",color="red")
plt.xlabel("Product")
plt.ylabel("Quantity Ordered")
plt.xticks(rotation=90)
plt.show()

# Step 5: Print Insights
print("\n--- Insights ---")
print("Sales by Month:\n", sales_by_month)
print("\nTop 5 Cities by Sales:\n", sales_by_city.head())
print("\nOrders by Hour:\n", orders_by_hour.head())
print("\nTop 5 Selling Products:\n", top_products.head())